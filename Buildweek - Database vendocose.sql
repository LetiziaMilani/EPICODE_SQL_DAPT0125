CREATE SCHEMA VENDOCOSE;

USE VENDOCOSE;

CREATE TABLE PRODOTTO (
	IDPRODOTTO INT,
    NOMEPRODOTTO VARCHAR(50),
    IDCATEGORIA INT,
    PREZZOUNI DECIMAL (10,2)
);

CREATE TABLE CATEGORIA (
	IDCATEGORIA INT,
    NOMECATEGORIA VARCHAR(50),
    CONSTRAINT PK_CATEGORIA PRIMARY KEY (IDCATEGORIA)
);
    
ALTER TABLE PRODOTTO
ADD CONSTRAINT PK_PRODOTTO PRIMARY KEY (IDPRODOTTO),
ADD CONSTRAINT FK_CATEGORIA_PRODOTTO FOREIGN KEY (IDCATEGORIA)
REFERENCES CATEGORIA(IDCATEGORIA);

CREATE TABLE REGIONE (
	IDREGIONE INT,
    NOMEREGIONE VARCHAR(50),
    CONSTRAINT PK_REGIONE PRIMARY KEY (IDREGIONE)
);


CREATE TABLE DEPOSITI (
	IDDEPOSITO INT,
    NOMEDEPOSITO VARCHAR(50),
    IDPRODOTTO INT,
    IDREGIONE INT,
    STOCK INT,
    CONSTRAINT PK_DEPOSITI PRIMARY KEY (IDDEPOSITO),
    CONSTRAINT FK_PRODOTTO_DEPOSITI FOREIGN KEY (IDPRODOTTO)
    REFERENCES PRODOTTO(IDPRODOTTO),
    CONSTRAINT FK_REGIONE_DEPOSITI FOREIGN KEY (IDREGIONE)
    REFERENCES REGIONE (IDREGIONE)
);


CREATE TABLE NEGOZI (
	IDNEGOZIO INT,
    NOMENEGOZIO VARCHAR (50),
    IDDEPOSITO INT,
    CONSTRAINT PK_NEGOZI PRIMARY KEY (IDNEGOZIO),
    CONSTRAINT FK_DEPOSITI_NEGOZI FOREIGN KEY (IDDEPOSITO)
    REFERENCES DEPOSITI (IDDEPOSITO)
);


CREATE TABLE MOVIMENTI_DEPOSITI (
IDPRODOTTO INT,
IDDEPOSITO INT, 
STOCK INT,
CONSTRAINT PK_MOVIMENTI_DEPOSITI PRIMARY KEY (IDPRODOTTO, IDDEPOSITO),
CONSTRAINT FK_PRODOTTO_MOVIMENTI FOREIGN KEY (IDPRODOTTO)
REFERENCES PRODOTTO (IDPRODOTTO),
CONSTRAINT FK_DEPOSITI_MOVIMENTI FOREIGN KEY (IDDEPOSITO)
REFERENCES DEPOSITI (IDDEPOSITO)
);

CREATE TABLE VENDITE (
IDVENDITA CHAR(5),
IDPRODOTTO INT,
IDNEGOZIO INT,
QUANTITAVENDUTA INT,
VENDITATOTALE DECIMAL (10,2),
CONSTRAINT PK_VENDITE PRIMARY KEY (IDVENDITA),
CONSTRAINT FK_PRODOTTO_VENDITE FOREIGN KEY (IDPRODOTTO)
REFERENCES PRODOTTO (IDPRODOTTO),
CONSTRAINT FK_NEGOZI_VENDITE FOREIGN KEY (IDNEGOZIO)
REFERENCES NEGOZI (IDNEGOZIO)
);

INSERT INTO CATEGORIA (IDCATEGORIA, NOMECATEGORIA)
VALUES
(1, 'Abbigliamento'),
(2, 'Cosmetica'),
(3, 'Cura degli animali'),
(4, 'Alimentari');    

SELECT *
FROM CATEGORIA;

INSERT INTO PRODOTTO (IDPRODOTTO, NOMEPRODOTTO, IDCATEGORIA, PREZZOUNI)
VALUES
(1, 'Giubbotto invernale', 1, 79.90),
(2, 'T-Shirt oversize', 1, 19.90),
(3, 'Mascara volume', 2, 15.50),
(4, 'Crema viso antiage', 2, 32.00),
(5, 'Crocchette per cani 2kg', 3, 12.99),
(6, 'Lettiera per gatti 10L', 3, 7.90),
(7, 'Latte intero 1L', 4, 1.30),
(8, 'Pasta fusilli 500g', 4, 2.20);

SELECT *
FROM PRODOTTO;

INSERT INTO REGIONE (IDREGIONE, NOMEREGIONE)
VALUES
(1, 'Lombardia'),
(2, 'Lazio'),
(3, 'Campania'),
(4, 'Sicilia'),
(5, 'Veneto'),
(6, 'Piemonte'),
(7, 'Emilia-Romagna'),
(8, 'Toscana'),
(9, 'Puglia'),
(10, 'Calabria');

SELECT *
FROM REGIONE;

INSERT INTO DEPOSITI (IDDEPOSITO, NOMEDEPOSITO, IDREGIONE)
VALUES
(1, 'Deposito A', 1),
(2, 'Deposito B', 2),
(3, 'Deposito C', 3),
(4, 'Deposito D', 1),
(5, 'Deposito E', 5);

SELECT *
FROM DEPOSITI;

INSERT INTO NEGOZI (IDNEGOZIO, NOMENEGOZIO, IDDEPOSITO)
VALUES
(1, 'Lunexa', 1),
(2, 'Orenza', 2),
(3, 'Kiora', 3),
(4, 'Brilò', 4),
(5, 'Vayra', 5);

SELECT * 
FROM NEGOZI;

INSERT INTO MOVIMENTI_DEPOSITI (IDPRODOTTO, IDDEPOSITO, STOCK) VALUES
(1, 1, 45),
(1, 2, 50),
(1, 3, 50),
(1, 4, 50),
(1, 5, 50),
(2, 1, 50),
(2, 2, 50),
(2, 3, 50),
(2, 4, 40),
(2, 5, 50),
(3, 1, 20),
(3, 2, 50),
(3, 3, 50),
(3, 4, 50),
(3, 5, 50),
(4, 1, 50),
(4, 2, 15),
(4, 3, 20),
(4, 4, 50),
(4, 5, 20),
(5, 1, 50),
(5, 2, 20),
(5, 3, 50),
(5, 4, 50),
(5, 5, 25),
(6, 1, 50),
(6, 2, 50),
(6, 3, 20),
(6, 4, 50),
(6, 5, 50),
(7, 1, 50),
(7, 2, 50),
(7, 3, 50),
(7, 4, 20),
(7, 5, 50),
(8, 1, 50),
(8, 2, 50),
(8, 3, 50),
(8, 4, 50),
(8, 5, 50);

SELECT *
FROM MOVIMENTI_DEPOSITI;

INSERT INTO VENDITE (IDVENDITA, IDPRODOTTO, IDNEGOZIO, QUANTITAVENDUTA, VENDITATOTALE) VALUES
('V001', 1, 1, 40, 3196.0),
('V002', 4, 2, 30, 960.0),
('V003', 4, 3, 35, 1120.0),
('V004', 7, 4, 35, 45.5),
('V005', 4, 5, 40, 1280.0),
('V006', 3, 1, 30, 465.0),
('V007', 2, 2, 40, 796.0),
('V008', 6, 3, 30, 237.0),
('V009', 2, 4, 30, 597.0),
('V010', 5, 5, 40, 519.6);

SELECT *
FROM VENDITE;

-- Ogni qual volta un prodotto viene venduto in un negozio, qual è la query da eseguire per aggiornare le tabelle di riferimento?

UPDATE MOVIMENTI_DEPOSITI
SET STOCK = STOCK - 40
WHERE IDPRODOTTO = 1 
AND IDDEPOSITO = (SELECT IDDEPOSITO 
				  FROM NEGOZI 
				  WHERE IDNEGOZIO = 1);
                  
-- Quali sono le query da eseguire per verificare quante unità di un prodotto ci sono in un dato magazzino e per monitorare le soglie 
-- di restock?

SELECT 
md.IDPRODOTTO,
p.NOMEPRODOTTO,
c.NOMECATEGORIA,
md.IDDEPOSITO,
md.STOCK,
CASE WHEN md.STOCK <= 20 THEN 'DA RIFORNIRE' -- 20 è livello di stock di esempio ma può essere variato
ELSE 'OK'
END AS STATO_STOCK
FROM MOVIMENTI_DEPOSITI md
INNER JOIN PRODOTTO p 
ON md.IDPRODOTTO = p.IDPRODOTTO
INNER JOIN CATEGORIA c 
ON p.IDCATEGORIA = c.IDCATEGORIA
ORDER BY md.STOCK ASC;    







    
